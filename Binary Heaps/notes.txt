Binary Heaps:
  Very similar to a binary search tree, just with different rules.
  In a MaxBinaryHeap, parent nodes are always larger than child nodes.
  In a MinBinaryHeap, parent nodes are always smaller than child nodes.

  Side note:
    For any index of an array n...
    The left child is stored at 2n + 1
    The right child is at 2n + 2
    For any child node at index n...
    Its parent is at index (n-1)/2

  MaxBinaryHeap:
    Each parent has at most 2 child nodes. The value of each parent node
    is always greater than it's child nodes. In a MaxBinaryHeap the parent 
    is greater than the children, but there are no guarantees between sibling
    nodes. A binary heap is as compact as possible. All the children of each 
    node are as full as can be and left children are filled out first.


  Insert Pseudocode:
    Push the value into the values property on the heap. Bubble up: Create a
    variable called index which is the length of the values property -1. Create
    a variable called parentIndex which is the floor of (index-1)/2. Keep looping
    as long as the values element at the parentIndex is less than the values element
    at the child index. Swap the value of the values element at the parentIndex with
    the value of the element property at the child index. Set the index to be the 
    parentIndex, then start over.